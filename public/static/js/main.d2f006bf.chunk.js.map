{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","components/helpers/fetch.js","components/helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/privateRoute.js","router/publicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","cheking","events","activeEvent","modalOpen","rootReducers","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","fetchSinToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","event","end","moment","toDate","start","eventAddNew","eventClearNoteActive","eventUpdated","eventDeleted","eventLoaded","chekingFinish","login","user","startLogOut","dispatch","clear","logOut","useForm","useState","formValues","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPasswordConf","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOneHour","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formvalues","setFormvalues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","momentStart","isAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","then","result","isConfirmed","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2f006bf.chunk.js","sourcesContent":["\r\nexport const types = {\r\n  uiOpenModal: '[ui] Open Modal',\r\n  uiCloseModal: '[ui] Close Modal',\r\n  \r\n  eventSetActive: '[event] Set Active',\r\n  eventStartAddNew: '[event] Start Add New',\r\n  eventAddnew: '[event] Add new',\r\n  eventClearNoteActive: '[event] Clear Note',\r\n  eventUpdate: '[event] Event Update',\r\n  evenDeleted: '[event] Event Delete',\r\n  eventLoaded: '[event] Events Loaded',\r\n  eventsClear: '[event] Clear Events',\r\n\r\n  authChekingFinish: '[auth] Finish cheking login state',\r\n  authStartLogin: '[auth] Start Login',\r\n  authLogin: '[auth] \"Login',\r\n  authStartRegister: '[auth] Start Register',\r\n  authStartTokenRenew: '[auth] Start Token Renew',\r\n  authLogout: '[auth] Logout'\r\n\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nconst initialState = {\r\n  cheking: true, // true para verificar si se autentico con antelacion\r\n}\r\n\r\nexport const authReducer = (state= initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        cheking: false\r\n      }\r\n\r\n    case types.authChekingFinish:\r\n      return {\r\n        ...state,\r\n        cheking: false\r\n      }\r\n\r\n    case types.authLogout:\r\n      return {\r\n        cheking: false        \r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import { types } from \"../types/types\"\r\n\r\n/* {\r\n  id: new Date().getTime(),\r\n  title: 'Cumpleaños',\r\n  start: moment().toDate(),\r\n  end: moment().add(2, 'hours').toDate(),\r\n  user: {\r\n    _id: 123,\r\n    name: 'Luis'\r\n  }\r\n} */\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action ) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload\r\n      }\r\n\r\n    case types.eventAddnew:\r\n    return{\r\n      ...state,\r\n      events: [\r\n        ...state.events,\r\n        action.payload\r\n      ]  \r\n    }\r\n\r\n    case types.eventClearNoteActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: null\r\n      }\r\n  \r\n    case types.eventUpdate:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(\r\n          e => (e.id === action.payload.id) ? action.payload: e\r\n        )\r\n      }\r\n    \r\n    case types.evenDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          e => (e.id !== state.activeEvent.id)\r\n        ),\r\n        activeEvent: null\r\n      }\r\n    \r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload]\r\n      }\r\n    \r\n    case types.eventsClear:\r\n      return {\r\n        events: [],\r\n        activeEvent: null\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true\r\n      }\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducers = combineReducers ({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer\r\n  //TODO: other Reducers\r\n})\r\n\r\n","import thunk from \"redux-thunk\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { rootReducers } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducers,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\n","const baseURL = process.env.REACT_APP_API_URL\r\n\r\nconst fetchSinToken = ( endPoint, data, method='GET' ) => {\r\n  const url = `${ baseURL }/${ endPoint }`\r\n  if(method === 'GET') {\r\n    return fetch(url)\r\n  } else {\r\n    return fetch( url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify( data )\r\n    })\r\n  }\r\n}\r\nconst fetchConToken = ( endPoint, data, method='GET' ) => {\r\n  const url = `${ baseURL }/${ endPoint }`\r\n  const token = localStorage.getItem('token') || '';\r\n\r\n  if(method === 'GET') {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    })\r\n  } else {\r\n    return fetch( url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token':token\r\n      },\r\n      body: JSON.stringify( data )\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  fetchSinToken,\r\n  fetchConToken\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n  return events.map(\r\n    (event) => ({\r\n      ...event,\r\n      end: moment(event.end).toDate(),\r\n      start: moment(event.start).toDate()\r\n    })\r\n  )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../components/helpers/fetch\";\r\nimport { prepareEvents } from \"../components/helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n\r\n    const {uid, name} = getState().auth\r\n\r\n    try {\r\n      const resp = await fetchConToken('events', event, 'POST')\r\n      const body = await resp.json()\r\n      if( body.ok ) {\r\n        event.id = body.evento.id\r\n        event.user = {\r\n          _id:uid,\r\n          name: name\r\n        }\r\n        dispatch( eventAddNew(event) )\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddnew,\r\n  payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event\r\n})\r\n\r\nexport const eventClearNoteActive = () => ({\r\n  type: types.eventClearNoteActive\r\n})\r\n\r\nexport const eventStartUpdated = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      \r\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT')\r\n      const body = await resp.json()\r\n      if( body.ok ) {\r\n        dispatch(eventUpdated(event))\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error')\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdate,\r\n  payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n\r\n    const {id} = getState().calendar.activeEvent\r\n\r\n    try {\r\n      \r\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE')\r\n      const body = await resp.json()\r\n      if( body.ok ) {\r\n        dispatch(eventDeleted())\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error').then((result) => {\r\n          if(result.isConfirmed){\r\n            dispatch( eventClearNoteActive() );\r\n          }\r\n        })\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n  type: types.evenDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken('events')\r\n      const body = await resp.json()\r\n      const events = prepareEvents(body.eventos)\r\n      dispatch( eventLoaded(events) )\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n  type: types.eventLoaded,\r\n  payload: events\r\n})\r\n\r\n\r\nexport const eventsClear = () => ({\r\n  type: types.eventsClear\r\n}) ","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../components/helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventClearNoteActive, eventsClear } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async( dispatch ) => {\r\n    const resp = await fetchSinToken('auth', {email, password}, 'POST')\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }))\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST')\r\n    const body = await resp.json()\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }))\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport const startCheking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchConToken( 'auth/renew' );    \r\n    const body = await resp.json()\r\n    console.log(body)\r\n    if( body.ok ) {\r\n        localStorage.setItem('token', body.token );\r\n        localStorage.setItem('token-init-date', new Date().getTime() );\r\n        dispatch( login({\r\n            uid: body.uid,\r\n            name: body.name\r\n        }))\r\n    } else {      \r\n        dispatch( chekingFinish() );\r\n    }\r\n  }\r\n}\r\n\r\nconst chekingFinish = () => ({\r\n  type: types.authChekingFinish\r\n})\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user\r\n})\r\n\r\n\r\nexport const startLogOut = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear()\r\n    dispatch( logOut() )\r\n    dispatch( eventClearNoteActive() )\r\n    dispatch( eventsClear() )\r\n  } \r\n}\r\n\r\nconst logOut = () => ({ type: types.authLogout})\r\n","  \r\nimport { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n  const [formValues, setValues] = useState(initialState)\r\n  \r\n  const reset = () => {\r\n    setValues(initialState)\r\n  }\r\n\r\n  const handleInputChange = ({target}) => {\r\n    setValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n  return [formValues, handleInputChange, reset]\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./login.css\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: 'luis@gmail.com',\r\n    lPassword: 'Abcd123!'\r\n  })\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: 'Carlos',\r\n    rEmail: 'carlos@gmail.com',\r\n    rPassword: 'Abcd123!',\r\n    rPasswordConf: 'Abcd123!',\r\n  })\r\n\r\n  const {rName, rEmail, rPassword, rPasswordConf} = formRegisterValues;\r\n  const {lEmail, lPassword} = formLoginValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    dispatch( startLogin(lEmail, lPassword) )\r\n  }\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault()\r\n    if (rPassword !== rPasswordConf) {\r\n      return Swal.fire('Error', 'Las contraseñas deben de ser iguales')\r\n    }\r\n    dispatch(startRegister(rEmail, rPassword, rName))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={ handleLogin }>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={ handleLoginInputChange }      \r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={ handleLoginInputChange }      \r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={ handleRegister }>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword\"\r\n                value={rPassword}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPasswordConf\"\r\n                value={rPasswordConf}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogOut } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n\r\n  const {name} = useSelector(state => state.auth)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogOut = () => {\r\n    dispatch( startLogOut() )\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">\r\n        {name}\r\n      </span>\r\n      <button\r\n        className = \"btn btn-outline-danger\"\r\n        onClick={ handleLogOut }\r\n      >\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Salir</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: total => `+ Ver más (${total})`\r\n};\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n  const {title, user} = event\r\n  return (\r\n    <div>\r\n      <strong>{title}</strong>\r\n      <span> by{ user.name }</span>\r\n    </div>\r\n  )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n  type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n  type: types.uiCloseModal\r\n})\r\n","import React, { useState } from 'react'\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearNoteActive, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\r\nconst nowPlusOneHour = now.clone().add(1, 'hours')\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlusOneHour.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const { modalOpen } = useSelector(state => state.ui)\r\n  const { activeEvent } = useSelector(state => state.calendar)\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const [dateStart, setDateStart] = useState(now.toDate())\r\n  const [dateEnd, setDateEnd] = useState(nowPlusOneHour.toDate())\r\n  const [titleValid, setTitleValid] = useState(true)\r\n  \r\n  const [formvalues, setFormvalues] = useState(initEvent)\r\n\r\n  const {title, notes, start, end} = formvalues;\r\n\r\n  useEffect(() => {\r\n    if( activeEvent ) {\r\n      setFormvalues(activeEvent)\r\n    } else {\r\n      setFormvalues(initEvent)\r\n    }\r\n  }, [activeEvent, setFormvalues])\r\n  \r\n  const handleInputChange = ({target}) => {\r\n    setFormvalues({\r\n      ...formvalues,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n\r\n  const closeModal = () => {\r\n    dispatch( uiCloseModal() )\r\n    dispatch( eventClearNoteActive() )\r\n    setFormvalues(initEvent)\r\n  }\r\n  \r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e)\r\n    setFormvalues({\r\n      ...formvalues,\r\n      start: e\r\n    })\r\n  }\r\n  const handleEndDateChange = (e) => {\r\n    setFormvalues({\r\n      ...formvalues,\r\n      end: e\r\n    })\r\n    setDateEnd(e)\r\n  }\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault()\r\n    const momentStart = moment( start )\r\n    const momentEnd = moment( end )\r\n    if (!momentEnd.isAfter(momentStart)) {\r\n      return (\r\n        Swal.fire('Error', 'La Fecha debe ser mayor a la fecha de inicio', 'error')\r\n      )\r\n    }\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false)\r\n    }\r\n\r\n    if( activeEvent ){\r\n      dispatch( eventStartUpdated( formvalues ) )\r\n      console.log(formvalues)\r\n    } else {\r\n      dispatch( eventStartAddNew(formvalues))\r\n    }\r\n  \r\n    setTitleValid(true)\r\n    closeModal()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={ modalOpen }\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      closeTimeoutMS = {200} \r\n      style={customStyles}\r\n      className = \"modal\"\r\n      overlayClassName = \"modal-fondo\"\r\n    >\r\n      <h1> {(activeEvent)? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n      <hr />\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={ handleSubmitForm }\r\n      >\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n            format = \"y-MM-dd h:mm:ss a\"\r\n            amPmAriaLabel=\"select AM/PM\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>          \r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate = {dateStart}\r\n            className=\"form-control\"\r\n            format = \"y-MM-dd h:mm:ss a\"            \r\n            amPmAriaLabel=\"select AM/PM\"\r\n          />\r\n        </div>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\" \r\n            className={ `form-control ${ !titleValid && 'is-invalid' } `}\r\n            placeholder=\"Título del evento\"\r\n            autoComplete=\"off\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={ handleInputChange }\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea \r\n            type=\"text\" \r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={ handleInputChange }\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleOpenModal = () => {\r\n    dispatch( uiOpenModal() )\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary fab\"\r\n      onClick={ handleOpenModal }\r\n    >\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const handleDelete = () => {\r\n    dispatch( eventStartDelete() )\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger fab-danger\"\r\n      onClick={ handleDelete }\r\n    >\r\n      <i className=\"fas fa-trash\"></i>\r\n      <span> Borrar Evento</span>\r\n    </button>\r\n  )\r\n}\r\n","import moment from 'moment';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useState } from 'react'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\n\r\nimport 'moment/locale/es'\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearNoteActive, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { useEffect } from 'react';\r\nmoment.locale('es')\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  // TODO: Leer los eventos\r\n  const {events} = useSelector(state => state.calendar)\r\n  const {activeEvent} = useSelector(state => state.calendar)\r\n  const {uid} = useSelector(state => state.auth)\r\n  \r\n  const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' )\r\n\r\n  useEffect(() => {\r\n    dispatch( eventStartLoading() )\r\n  }, [dispatch])\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch( uiOpenModal() )\r\n  }\r\n  \r\n  const onSelectEvent = (e) => {\r\n    dispatch( eventSetActive(e) )\r\n  }\r\n  \r\n  const onViewChange = (e) => {\r\n    setLastView(e)\r\n    localStorage.setItem('lastView', e)\r\n  } \r\n\r\n  const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n    const style = {\r\n      backgroundColor: (uid === event.user._id ) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      display: 'block',\r\n      color: 'white'\r\n    }\r\n    return {\r\n      style\r\n    }\r\n  }\r\n\r\n  const onSelectSlot = () => {\r\n    dispatch( eventClearNoteActive() );\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n        <Calendar\r\n          localizer = { localizer }\r\n          events = { events }\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          messages = { messages }\r\n          eventPropGetter = { eventStyleGetter }\r\n          onDoubleClickEvent = { onDoubleClick }\r\n          onSelectEvent = { onSelectEvent }\r\n          onView = { onViewChange }\r\n          onSelectSlot={ onSelectSlot }\r\n          view = {lastView}\r\n          components = {{\r\n            event: CalendarEvent\r\n          }}\r\n        />\r\n        <AddNewFab />\r\n        {\r\n          activeEvent &&\r\n          <DeleteEventFab />\r\n        }\r\n\r\n        <CalendarModal />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n\r\n\r\nreturn (\r\n    <Route {...rest}\r\n      component = { (props) => (\r\n        ( isAuthenticated )\r\n          ? (<Component { ...props } />)\r\n          : (<Redirect to = \"/login\" /> )\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Route {...rest}\r\n      component = { (props) => (\r\n        ( !isAuthenticated )\r\n         ? (<Component { ...props } />)\r\n         : (<Redirect to = \"/\" /> )\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport { startCheking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './privateRoute'\r\nimport { PublicRoute } from './publicRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const {cheking, uid} = useSelector(state => state.auth)\r\n  \r\n  useEffect(() => {\r\n    dispatch( startCheking() )\r\n  }, [dispatch])\r\n\r\n  if (cheking) {\r\n    return <h5>Espere... </h5>\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path = \"/login\"\r\n            component = {LoginScreen}\r\n            isAuthenticated={ !!uid }\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path = \"/\"\r\n            component = {CalendarScreen}\r\n            isAuthenticated={ !!uid }\r\n          />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\nconsole.log(process.env.REACT_APP_API_URL)\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}